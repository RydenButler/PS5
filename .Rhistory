P
P[2,2] <- NA
P[4,4] <- NA
y <- 1:4
r = NULL
HandleNAs <- cbind(P, y, r)
HandleNAs
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
NARows
y <- y[-NARows]
y
r <- r[-NARows]
r
P <- P[-NARows, ]
P
output <- matrix(NA, nrow = ncol(P), ncol = 1)
is.matrix(P)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
P <- matrix(rep(1:4, 4), ncol = 4)
P[2,2] <- NA
P[4,4] <- NA
y <- 1:4
r = NULL
HandleNAs <- cbind(P, y, r)
HandleNAs
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
NARows
if(length(NARows) != 0){
y <- y[-NARows]
P <- P[-NARows, ]
r <- r[-NARows]
}
y
r
P
ncol(P)
print(ncol(P))
output <- matrix(NA, nrow = ncol(P), ncol = 1)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
matrix(c(1,2,1,3,3,NA)
)
matrix(c(1,2,1,3,3,NA), ncol=3)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData')
load('TestData.RData')
fitstats(y=Test, P=PredictMatrix)
P
head(PredictMatrix)
head(Test)
fitstats(y=Test$Obamameter, P=PredictMatrix)
PredictMatrix < 0
sum(PredictMatrix < 0)
sum(PredictMatrix < 0, na.rm = T)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictedMatrix, r = Naive)
fitstats(P = PredictMatrix, r = Naive)
Naive
PredictMatrix
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
dim(PredictMatrix)
length(Naive)
r = NULL
HandleNAs <- cbind(PredictMatrix, Test$Obamameter, r)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
NARows
if(length(NARows) != 0){
y <- y[-NARows]
P <- t(as.matrix(P[-NARows, ]))
r <- r[-NARows]
}
if(length(NARows) != 0){
y <- Test$Obamameter[-NARows]
P <- t(as.matrix(PredictMatrix[-NARows, ]))
r <- r[-NARows]
}
y
dim(PredictMatrix)
head(P)
NARows
PredictMatrix[-NARows, ]
as.matrix(PredictMatrix[-NARows, ])
t(as.matrix(PredictMatrix[-NARows, ]))
P <- solve((as.matrix(PredictMatrix[-NARows, ]))
r <- r[-NARows]
}
output <- matrix(NA, nrow = ncol(P), ncol = 1)
rownames(output) <- colnames(P)
# calculate individual errors
e <- abs(P - y)
# produces some huge values b/c 0s in y
a <- (e/abs(y))*100
# calculate r if necessary
if (!is.null(r)) b <- abs(r - y)
# calculate fit statistics
if ('RMSE' %in% fits) {
RMSE <- sqrt(apply(e, 2, function(x) sum(x^2))/nrow(e))
output <- cbind(output, RMSE)
}
if ('MAD' %in% fits) {
MAD <- apply(e , 2, median)
output <- cbind(output, MAD)
}
if ('RMSLE' %in% fits) {
RMSLE <- sqrt(apply(P, 2, function(x) sum(log(x + 1) - log(y + 1))^2)/nrow(P))
output <- cbind(output, RMSLE)
}
if ('MAPE' %in% fits) {
MAPE <- apply(a, 2, sum)/nrow(a)
output <- cbind(output, MAPE)
}
if ('MEAPE' %in% fits) {
MEAPE <- apply(a, 2, median)
output <- cbind(output, MEAPE)
}
if ('MRAE' %in% fits & !is.null(r)) {
MRAE <- apply(e, 2, function(x) median(e/x))
output <- cbind(output, MRAE)
}
if ('MRAE' %in% fits & is.null(r)) {
print('Must pass a vector of naive estimates to r for MRAE.')
}
return(output[, -1])
}
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
if(length(NARows) != 0){
y <- Test$Obamameter[-NARows]
P <- solve((as.matrix(PredictMatrix[-NARows, ]))
r <- r[-NARows]
}
if(length(NARows) != 0){
y <- Test$Obamameter[-NARows]
P <- solve(as.matrix(PredictMatrix[-NARows, ]))
r <- r[-NARows]
}
as.matrix(PredictMatrix[-NARows, ]
)
t(as.matrix(PredictMatrix[-NARows, ])
)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
current.code <- as.package("FitR")
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
HandleNAs <- cbind(PredictMatrix, y, Naive)
length(Naive)
dim(PredictMatrix)
HandleNAs <- cbind(PredictMatrix, NULL, Naive)
head(HandleNAs)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
NARows
if(length(NARows) != 0){
y <- y[-NARows]
P <- as.matrix(P[-NARows, ])
r <- r[-NARows]
}
y
HandleNAs <- cbind(PredictMatrix, NULL, Naive)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
load('PredictedMatrix.RData')
load('TestData.RData')
HandleNAs <- cbind(PredictMatrix, NULL, Naive)
Naive <- rep(50, nrow(PredictMatrix))
HandleNAs <- cbind(PredictMatrix, NULL, Naive)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
if(length(NARows) != 0){
y <- y[-NARows]
P <- as.matrix(P[-NARows, ])
r <- r[-NARows]
}
y = NULL
HandleNAs <- cbind(PredictMatrix, y, Naive)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
if(length(NARows) != 0){
y <- y[-NARows]
P <- as.matrix(P[-NARows, ])
r <- r[-NARows]
}
p = PredictMatrix
P = PredictMatrix
r = Naive
HandleNAs <- cbind(P, y, r)
NARows <- which(is.na(HandleNAs), arr.ind=T)[ , 1]
if(length(NARows) != 0){
y <- y[-NARows]
P <- as.matrix(P[-NARows, ])
r <- r[-NARows]
}
y
r
P
dim(P)
length(r)
output <- matrix(NA, nrow = ncol(P), ncol = 1)
rownames(output) <- colnames(P)
e <- abs(P - y)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(P = PredictMatrix, r = Naive)
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test, P = PredictMatrix, r = Naive)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test, P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test, P = PredictMatrix, r = Naive)
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = )
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,4), ncol=3))
fitstats(y = c(1,2), P = matrix(c(1,2,1,3,3,NA), ncol=3))
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = )
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = )
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
fitstats(y=Test$Obamameter, P=PredictMatrix)
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = 'RMSE')
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
# Check that the default set-up works
fitstats(y=Test$Obamameter, P=PredictMatrix)
# Check that the default set-up still works w/ r
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
# Check that error throws when asking for all fit stats w/o r
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('RMSE', 'MAD', 'MAPE'))
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('RMSE', 'MAD', 'MAPE'))
c(1,2,3) > 4
Inf > 1
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('RMSE', 'MAD', 'MAPE'))
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
# Load data and create naive forecast
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
# Check that the default set-up works
fitstats(y=Test$Obamameter, P=PredictMatrix)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
# Load data and create naive forecast
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
# Check that the default set-up works
fitstats(y=Test$Obamameter, P=PredictMatrix)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
# Load data and create naive forecast
load('PredictedMatrix.RData')
load('TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
# Check that the default set-up works
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('MAPE', 'MEAPE'))
Naive <- rep(0, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('MAPE', 'MEAPE'))
Naive <- rep(100, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('MAPE', 'MEAPE'))
Naive <- rep(100000, nrow(PredictMatrix))
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('MAPE', 'MEAPE'))
Naive <- rep(50, nrow(PredictMatrix))
load('PS5/SupportingMaterial/RData/PredictedMatrix.RData')
setwd("~/Dropbox/Courses/Semester4/R/PS5")
setwd("~/Dropbox/Courses/Semester4/R/PS5/SupportingMaterial/RData")
load('PS5/SupportingMaterial/RData/PredictedMatrix.RData')
load('/SupportingMaterial/RData/PredictedMatrix.RData')
setwd("~/Dropbox/Courses/Semester4/R/PS5")
load('/SupportingMaterial/RData/PredictedMatrix.RData')
load('PS5/SupportingMaterial/RData/PredictedMatrix.RData')
setwd("~/Dropbox/Courses/Semester4/R/PS5/SupportingMaterial/RData")
load('PredictedMatrix.RData')
load('/PS5/SupportingMaterial/RData/PredictedMatrix.RData')
setwd("~/Dropbox/Courses/Semester4/R/PS5")
load('/PS5/SupportingMaterial/RData/PredictedMatrix.RData')
load('PS5/SupportingMaterial/RData/PredictedMatrix.RData')
load('/SupportingMaterial/RData/PredictedMatrix.RData')
load('SupportingMaterial/RData/PredictedMatrix.RData')
load('SupportingMaterial/RData/TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
current.code <- as.package("FitR")
library(devtools)
library(roxygen2)
setwd("~/Dropbox/Courses/Semester4/R/PS5")
current.code <- as.package("FitR")
load_all(current.code)
document(current.code)
load('SupportingMaterial/RData/PredictedMatrix.RData')
load('SupportingMaterial/RData/TestData.RData')
Naive <- rep(50, nrow(PredictMatrix))
fitstats(y=Test$Obamameter, P=PredictMatrix)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive)
fitstats(y = Test$Obamameter, P = PredictMatrix, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive, HideFits = NULL)
fitstats(y = Test$Obamameter, P = PredictMatrix, r = Naive,
HideFits = c('MAPE', 'MEAPE'))
